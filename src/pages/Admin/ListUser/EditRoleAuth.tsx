import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { SheetClose, SheetContent, SheetFooter } from '@/components/ui/sheet'
import { toast } from '@/components/ui/use-toast'
import { useAuthMutation } from '@/hooks/Auth/useAuthMutation'
import { useAuthQuery } from '@/hooks/Auth/useAuthQuery'
import { setEmployeeCode } from '@/services/auth'

import { useEffect, useState } from 'react'

import { useForm } from 'react-hook-form'
import { useNavigate, useParams } from 'react-router-dom'

const EditRoleAuth = ({ id }: any) => {
    const navigate = useNavigate()
    const { data } = useAuthQuery(id)
    console.log(data)
    const { onSubmit } = useAuthMutation({
        action: 'UPDATEROLE'
        // onSuccess: () => {
        //     toast({
        //         variant: 'success',
        //         title: 'C·∫≠p nh·∫≠t th√†nh c√¥ng!!',
        //         description: 'C·∫≠p nh·∫≠t quy·ªÅn t√†i kho·∫£n th√†nh c√¥ng!'
        //     })
        //     navigate('/admin/user')
        // }
    })
    const [iduser, setIdUser] = useState('') // State l∆∞u tr·ªØ id user
    const [mdValue, setMdValue] = useState('') // State ƒë·ªÉ l∆∞u gi√° tr·ªã chu·ªói MD5

    useEffect(() => {
        // Gi·∫£ s·ª≠ id user ƒë√£ ƒë∆∞·ª£c l·∫•y t·ª´ d·ªØ li·ªáu c·ªßa ng∆∞·ªùi d√πng
        const userIdFromData = data?.datas?._id // V√≠ d·ª•: id user l√† '12345'
        setIdUser(userIdFromData)
    }, []) // useEffect ch·ªâ ch·∫°y m·ªôt l·∫ßn sau khi render

    useEffect(() => {
        // Ki·ªÉm tra xem userId c√≥ gi√° tr·ªã kh√¥ng tr∆∞·ªõc khi t·∫°o chu·ªói MD5
        if (iduser) {
            const md5String = `MD${iduser.slice(-5)}` // T·∫°o chu·ªói MD5 v·ªõi "MD" v√† 5 s·ªë cu·ªëi c·ªßa userId
            setMdValue(md5String) // C·∫≠p nh·∫≠t gi√° tr·ªã c·ªßa tr∆∞·ªùng input
        }
    }, [iduser])
    const {
        register,
        handleSubmit,
        setValue,
        formState: { errors }
    } = useForm()
    useEffect(() => {
        if (data) {
            setValue('role', data.datas.role)
            setValue('jobPosition', data.datas.jobPosition)
            setValue('employee', data.datas.employee)
        }
    }, [data, setValue])
    const handleRoleChange = (selectedRole: any) => {
        let newPosition = ''

        // X√°c ƒë·ªãnh v·ªã tr√≠ c√¥ng vi·ªác d·ª±a tr√™n vai tr√≤ ƒë∆∞·ª£c ch·ªçn
        switch (selectedRole) {
            case 'adminProduct':
                newPosition = 'Qu·∫£n l√≠ s·∫£n ph·∫©m'
                break
            case 'adminVoucher':
                newPosition = 'Qu·∫£n l√≠ Voucher'
                break
            case 'adminOrder':
                newPosition = 'Qu·∫£n l√≠ h√≥a ƒë∆°n'
                break
            case 'adminContact':
                newPosition = 'Qu·∫£n l√≠ li√™n h·ªá'
                break
            case 'adminMember':
                newPosition = 'Qu·∫£n l√≠ t√†i kho·∫£n ng∆∞·ªùi d√πng'
                break
            case 'adminComment':
                newPosition = 'Qu·∫£n l√≠ b√¨nh lu·∫≠n, ƒë√°nh gi√°'
                break
            case 'adminWeb':
                newPosition = 'Qu·∫£n l√≠ c·∫•p cao'
                break
            default:
                newPosition = ''
                break
        }

        // C·∫≠p nh·∫≠t gi√° tr·ªã c·ªßa tr∆∞·ªùng v·ªã tr√≠ c√¥ng vi·ªác
        setValue('jobPosition', newPosition)
    }

    const onHandleSubmit = (data: any) => {
        const updatedUserRole = {
            ...data,
            _id: id,
            // name: data.name,
            // email: data.email,
            employee: mdValue,
            role: data.role,
            jobPosition: data.jobPosition
        }
        console.log('üöÄ ~ onHandleSubmit ~ updatedCategory:', updatedUserRole)
        onSubmit(updatedUserRole)
        // await setEmployeeCode(updatedUserRole)
    }

    return (
        <>
            <SheetContent className=''>
                {/* <p className='px-20 text-xl text-sky-400'>C·∫≠p nh·∫≠t vai tr√≤ </p> */}
                <div className='bg-slate-50  rounded-lg py-10 px-3'>
                    <form onSubmit={handleSubmit(onHandleSubmit)}>
                        <div className='flex flex-col gap-3 w-56 pb-3'>
                            <p className='font-medium text-base '>M√£ nh√¢n vi√™n</p>
                            <Input
                                className='border-spacing-1 border-gray-200 rounded-md'
                                id='employee'
                                value={mdValue}
                                {...register('employee')}
                                readOnly
                            />
                        </div>
                        <div className=' '>
                            <p className='font-medium text-base '>Vai tr√≤</p>
                            <select
                                className='border-spacing-1 border-blue-400 border-gray-200 pl-3'
                                id='role'
                                style={{ borderRadius: '8px', height: '42px' }}
                                placeholder='M·ªùi ch·ªçn vai tr√≤'
                                {...register('role', { required: true })}
                                onChange={(e) => handleRoleChange(e.target.value)}
                            >
                                <option value='member'>Kh√°ch h√†ng </option>
                                <option value='adminProduct'>Nh√¢n vi√™n qu·∫£n l√≠ s·∫£n ph·∫©m </option>
                                <option value='adminVoucher'>Nh√¢n vi√™n qu·∫£n l√≠ Voucher </option>
                                <option value='adminOrder'>Nh√¢n vi√™n qu·∫£n l√≠ h√≥a ƒë∆°n </option>
                                <option value='adminContact'>Nh√¢n vi√™n qu·∫£n l√≠ li√™n h·ªá </option>
                                <option value='adminMember'>Nh√¢n vi√™n qu·∫£n l√≠ t√†i kho·∫£n ng∆∞·ªùi d√πng </option>
                                <option value='adminComment'>Nh√¢n vi√™n qu·∫£n l√≠ b√¨nh lu·∫≠n, ƒë√°nh gi√° </option>
                                <option value='adminWeb'> Qu·∫£n l√≠ c·∫•p cao</option>
                            </select>
                            {errors.role && errors.role.type === 'required' && (
                                <p className='text-red-500'>Ch·ªçn vai tr√≤ l√† b·∫Øt bu·ªôc l√† b·∫Øt bu·ªôc.</p>
                            )}
                        </div>

                        <div className='flex flex-col gap-3 w-56 pb-3'>
                            <p className='font-medium text-base '>V·ªã tr√≠ c√¥ng vi·ªác</p>
                            <Input
                                className='border-spacing-1 border-gray-200 rounded-md'
                                id='jobPosition'
                                // value={mdValue}
                                {...register('jobPosition')}
                                // readOnly
                            />
                        </div>

                        <SheetFooter>
                            <SheetClose asChild>
                                <Button type='submit'>C·∫≠p nh·∫≠t</Button>
                            </SheetClose>
                        </SheetFooter>
                    </form>
                </div>
            </SheetContent>
        </>
    )
}

export default EditRoleAuth
