import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { toast } from '@/components/ui/use-toast'
import { useTypeVoucherQuery } from '@/hooks/TypeVoucher/useTypeVoucherQuery'
import { useVoucherMutation } from '@/hooks/Voucher/useVoucherMutation'
import { useForm } from 'react-hook-form'
import { useNavigate } from 'react-router-dom'
const AddVoucher = () => {
    const navigate = useNavigate()
    const { data } = useTypeVoucherQuery()
    const typeVoucher = data?.datas
    const { onSubmit } = useVoucherMutation({
        action: 'ADD',
        onSuccess: () => {
            toast({
                variant: 'success',
                title: 'Th√™m th√†nh c√¥ng!!',
                description: 'Th√™m danh m·ª•c khuy·∫øn m·∫°i th√†nh c√¥ng!'
            })
            navigate('/admin/voucher')
        }
    })
    const {
        register,
        handleSubmit,
        setValue,
        formState: { errors }
    } = useForm()

    const onHandleSubmit = (data: any) => {
        const dataNew = {
            voucher: {
                name: data.name,
                status: true,
                quantity: data.quantity,
                decrease: data.decrease,
                expiry: data.expiry,
                conditions: data.conditions,
                idTypeVoucher: data.idTypeVoucher
            },
            phanPhatVoucher: [
                { minTotalBil: data.minTotalBill1, quantity: data.quantity1 },
                { minTotalBil: data.minTotalBill2, quantity: data.quantity2 },
                { minTotalBil: data.minTotalBill3, quantity: data.quantity3 },
                { minTotalBil: data.minTotalBill4, quantity: data.quantity4 }
            ]
        }
        console.log('üöÄ ~ onHandleSubmit ~ dataNew:', dataNew)
        onSubmit(dataNew)
    }
    return (
        <>
            <div className='px-7 w-auto mb-4'>
                <form onSubmit={handleSubmit(onHandleSubmit)} className=''>
                    <h1 style={{ fontSize: '20px', marginTop: '20px' }}>Th√™m voucher</h1>

                    <div className='flex flex-row gap-5'>
                        <div>
                            <p>T√™n voucher</p>
                            <Input
                                className='border-spacing-1 border-gray-200 rounded-md pl-2 -mr-4 mb-1'
                                type='text'
                                id='name'
                                {...register('name', { required: true, minLength: 3, maxLength: 50 })}
                                onChange={(e) => setValue('name', e.target.value)}
                                placeholder='M√£ voucher'
                            />
                            {errors.name && <p className='text-red-500'>T√™n voucher l√† b·∫Øt bu·ªôc.</p>}
                            {errors.name && errors.name.type === 'minLength' && (
                                <p className='text-red-500'>T√™n voucher ph·∫£i c√≥ √≠t nh·∫•t 3 k√≠ t·ª±.</p>
                            )}
                            {errors.name && errors.name.type === 'maxLength' && (
                                <p className='text-red-500'>T√™n voucher kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 50 k√≠ t·ª±.</p>
                            )}
                        </div>
                        <div>
                            <p>Gi·∫£m</p>
                            <Input
                                className='border-spacing-1 border-gray-200 pl-3 mb-1'
                                type='number'
                                id='decrease'
                                placeholder='Gi·∫£m'
                                {...register('decrease', { required: true, min: 1 })}
                                onChange={(e) => setValue('decrease', e.target.value)}
                            />
                            {errors.decrease && errors.decrease.type === 'required' && (
                                <p className='text-red-500'>Gi·∫£m l√† b·∫Øt bu·ªôc.</p>
                            )}
                            {errors.decrease && errors.decrease.type === 'min' && (
                                <p className='text-red-500'>Gi·∫£m ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0.</p>
                            )}
                        </div>
                    </div>
                    <div className='flex flex-row gap-5'>
                        <div>
                            <p>Ng√†y h·∫øt h·∫°n</p>
                            <Input
                                className='border-spacing-1 border-gray-200  rounded-md h-14 pl-5  mb-1 -mr-0'
                                type='date'
                                placeholder='Ng√†y h·∫øt h·∫°n'
                                id='expiry'
                                {...register('expiry', { required: true, pattern: /^\d{4}-\d{2}-\d{2}$/ })}
                                onChange={(e) => setValue('expiry', e.target.value)}
                            />
                            {errors.expiry && errors.expiry.type === 'required' && (
                                <p className='text-red-500'>Ng√†y h·∫øt h·∫°n l√† b·∫Øt bu·ªôc.</p>
                            )}
                            {errors.expiry && errors.expiry.type === 'pattern' && (
                                <p className='text-red-500'>Vui l√≤ng nh·∫≠p ng√†y h·ª£p l·ªá (YYYY-MM-DD).</p>
                            )}
                        </div>
                        <div>
                            <p>ƒêi·ªÅu ki·ªán</p>
                            <Input
                                className='border-spacing-1 border-gray-200 rounded-md pl-3 mb-1'
                                type='number'
                                id='conditions'
                                placeholder='H√≥a ƒë∆°n t·ªëi thi·ªÉu'
                                {...register('conditions', { required: true, min: 1 })}
                                onChange={(e) => setValue('conditions', e.target.value)}
                            />
                            {errors.conditions && errors.conditions.type === 'required' && (
                                <p className='text-red-500'>Gi·∫£m l√† b·∫Øt bu·ªôc.</p>
                            )}
                            {errors.conditions && errors.conditions.type === 'min' && (
                                <p className='text-red-500'>Gi·∫£m ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 1.</p>
                            )}
                        </div>
                    </div>
                    <div className='flex flex-row gap-5'>
                        <div>
                            <p>S·ªë l∆∞·ª£ng</p>
                            <Input
                                className='border-spacing-1 border-gray-200 rounded-md pl-3 mb-1'
                                type='number'
                                id='quantity'
                                placeholder='S·ªë l∆∞·ª£ng'
                                {...register('quantity', { required: true, min: 1 })}
                                onChange={(e) => setValue('quantity', e.target.value)}
                            />
                            {errors.quantity && errors.quantity.type === 'required' && (
                                <p className='text-red-500'>Gi·∫£m l√† b·∫Øt bu·ªôc.</p>
                            )}
                            {errors.quantity && errors.quantity.type === 'min' && (
                                <p className='text-red-500'>Gi·∫£m ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 1 .</p>
                            )}
                        </div>
                        <div>
                            <p>Lo·∫°i m√£</p>
                            <select
                                className='border-spacing-1 border-gray-200 rounded-md pl-3 mb-1'
                                id='typeVoucher'
                                {...register('idTypeVoucher', { required: true })}
                                // onChange={(e) => setValue('idTypeVoucher', e.target.value)}
                                onChange={(e) => {
                                    const selectedIndex = e.target.selectedIndex
                                    setValue('idTypeVoucher', e.target.options[selectedIndex].value)
                                }}
                                style={{ width: '270px' }}
                            >
                                <option value=''>Ch·ªçn lo·∫°i voucher</option>
                                {typeVoucher?.map((item: any, index: any) => (
                                    <option key={index} value={item?._id}>
                                        {item?.name}
                                    </option>
                                ))}
                            </select>
                            {errors.idTypeVoucher && <p className='text-red-500'>Lo·∫°i voucher l√† b·∫Øt bu·ªôc.</p>}
                        </div>
                    </div>
                    <div className='themPhanPhatVoucher'>
                        <h1 style={{ fontSize: '20px', marginTop: '20px' }}>Ph√¢n ph√°t voucher cho ng∆∞·ªùi d√πng</h1>
                        <i className='text-danger'>
                            minTotalBill l√† t·ªïng ti·ªÅn t·∫•t c·∫£ h√≥a ƒë∆°n c·ªßa ng∆∞·ªùi d√πng nh·ªè nh·∫•t ƒë·ªÉ nh·∫≠n s·ªë l∆∞·ª£t s·ª≠ d·ª•ng
                            voucher t∆∞∆°ng ·ª©ng
                        </i>
                        <div className='flex flex-row gap-5' style={{ marginTop: '20px' }}>
                            <div>
                                <Label>T·ªïng ti·ªÅn h√≥a ƒë∆°n </Label>
                                <Input
                                    className='border-spacing-1 border-gray-200 rounded-md pl-2 -mr-4 mb-1'
                                    type='number'
                                    id='name'
                                    {...register('minTotalBill1', { required: true, min: 100000 })}
                                    onChange={(e) => setValue('minTotalBill1', e.target.value)}
                                    placeholder='> 100000 VNƒê'
                                />
                                {errors.minTotalBill1 && <p className='text-red-500'>minTotalBill 1 l√† b·∫Øt bu·ªôc.</p>}
                                {errors.minTotalBill1 && errors.minTotalBill1.type === 'min' && (
                                    <p className='text-red-500'>minTotalBill 1 l·ªõn h∆°n 100000 VNƒê</p>
                                )}
                            </div>
                            <div>
                                <Label>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c</Label>
                                <Input
                                    className='border-spacing-1 border-gray-200 pl-3 mb-1'
                                    type='number'
                                    id='quantity1'
                                    placeholder='1'
                                    {...register('quantity1', { required: true, min: 1 })}
                                    onChange={(e) => setValue('quantity1', e.target.value)}
                                />
                                {errors.quantity1 && errors.quantity1.type === 'required' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c b·∫Øt bu·ªôc kh√¥ng ƒë·ªÉ tr·ªëng.</p>
                                )}
                                {errors.quantity1 && errors.quantity1.type === 'min' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0.</p>
                                )}
                            </div>
                        </div>
                        <div className='flex flex-row gap-5' style={{ marginTop: '20px' }}>
                            <div>
                                <Input
                                    className='border-spacing-1 border-gray-200 rounded-md pl-2 -mr-4 mb-1'
                                    type='number'
                                    id='name'
                                    {...register('minTotalBill2', { required: true, min: 100000 })}
                                    onChange={(e) => setValue('minTotalBill2', e.target.value)}
                                    placeholder='> 300000 VNƒê'
                                />
                                {errors.minTotalBill2 && <p className='text-red-500'>minTotalBill 2 l√† b·∫Øt bu·ªôc.</p>}
                                {errors.minTotalBill2 && errors.minTotalBill2.type === 'min' && (
                                    <p className='text-red-500'>minTotalBill 2 l·ªõn h∆°n 100000 VNƒê</p>
                                )}
                            </div>
                            <div>
                                <Input
                                    className='border-spacing-1 border-gray-200 pl-3 mb-1'
                                    type='number'
                                    id='quantity2'
                                    placeholder='2'
                                    {...register('quantity2', { required: true, min: 1 })}
                                    onChange={(e) => setValue('quantity2', e.target.value)}
                                />
                                {errors.quantity2 && errors.quantity2.type === 'required' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c b·∫Øt bu·ªôc kh√¥ng ƒë·ªÉ tr·ªëng.</p>
                                )}
                                {errors.quantity2 && errors.quantity2.type === 'min' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0.</p>
                                )}
                            </div>
                        </div>
                        <div className='flex flex-row gap-5' style={{ marginTop: '20px' }}>
                            <div>
                                <Input
                                    className='border-spacing-1 border-gray-200 rounded-md pl-2 -mr-4 mb-1'
                                    type='number'
                                    id='name'
                                    {...register('minTotalBill3', { required: true, min: 100000 })}
                                    onChange={(e) => setValue('minTotalBill3', e.target.value)}
                                    placeholder='> 500000 VNƒê'
                                />
                                {errors.minTotalBill3 && <p className='text-red-500'>minTotalBill 3 l√† b·∫Øt bu·ªôc.</p>}
                                {errors.minTotalBill3 && errors.minTotalBill3.type === 'min' && (
                                    <p className='text-red-500'>minTotalBill 3 l·ªõn h∆°n 100000 VNƒê</p>
                                )}
                            </div>
                            <div>
                                <Input
                                    className='border-spacing-1 border-gray-200 pl-3 mb-1'
                                    type='number'
                                    id='quantity2'
                                    placeholder='3'
                                    {...register('quantity3', { required: true, min: 1 })}
                                    onChange={(e) => setValue('quantity3', e.target.value)}
                                />
                                {errors.quantity3 && errors.quantity3.type === 'required' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c b·∫Øt bu·ªôc kh√¥ng ƒë·ªÉ tr·ªëng.</p>
                                )}
                                {errors.quantity3 && errors.quantity3.type === 'min' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0.</p>
                                )}
                            </div>
                        </div>
                        <div className='flex flex-row gap-5' style={{ marginTop: '20px' }}>
                            <div>
                                <Input
                                    className='border-spacing-1 border-gray-200 rounded-md pl-2 -mr-4 mb-1'
                                    type='number'
                                    id='name'
                                    {...register('minTotalBill4', { required: true, min: 100000 })}
                                    onChange={(e) => setValue('minTotalBill4', e.target.value)}
                                    placeholder='> 800000 VNƒê'
                                />
                                {errors.minTotalBill4 && <p className='text-red-500'>minTotalBill 4 l√† b·∫Øt bu·ªôc.</p>}
                                {errors.minTotalBill4 && errors.minTotalBill4.type === 'min' && (
                                    <p className='text-red-500'>minTotalBill 4 l·ªõn h∆°n 100000 VNƒê</p>
                                )}
                            </div>
                            <div>
                                <Input
                                    className='border-spacing-1 border-gray-200 pl-3 mb-1'
                                    type='number'
                                    id='quantity2'
                                    placeholder='4'
                                    {...register('quantity4', { required: true, min: 1 })}
                                    onChange={(e) => setValue('quantity4', e.target.value)}
                                />
                                {errors.quantity4 && errors.quantity4.type === 'required' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c b·∫Øt bu·ªôc kh√¥ng ƒë·ªÉ tr·ªëng.</p>
                                )}
                                {errors.quantity4 && errors.quantity4.type === 'min' && (
                                    <p className='text-red-500'>S·ªë l∆∞·ª£t d√πng nh·∫≠n ƒë∆∞·ª£c ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0.</p>
                                )}
                            </div>
                        </div>
                    </div>
                    <div className='flex justify-end mt-5'>
                        <Button type='submit' className='bg-blue-500 px-4 py-1 rounded mr-2'>
                            Th√™m
                        </Button>
                    </div>
                </form>
            </div>
        </>
    )
}

export default AddVoucher
